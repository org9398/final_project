---
title: "Data Science for Public Policy"
subtitle: "Final Project"
author: "Olivia Gomez, Alicia Helfrich, Allie Gleich, Edward Malcolm"
execute:
  warning: false
format:
  html:
    embed-resources: true
---

# Final Project

## The Importance of Health Care Access and Economic Stability for Immigrant Communities in the United States

Meaningful health care coverage is critical to living a productive, secure and healthy life. Health insurance facilitates access to care and is associated with lower death rates, better health outcomes, and improved productivity. U.S. residents obtain health coverage from a variety of private and public sources, such as through their employers or direct purchase on the individual market (private sources), as well as through the Medicare, Medicaid, or Veterans Affairs programs (public sources) (American Hospital Association).

**Placeholder for intro paragraph on economic outcomes**

Through data analysis, this research project strives to explore health care enrollment by groups in order to articulate how immigration can impact health and economic status in the United States. By understanding the depth and reach of disparities in these vulnerable communities, decision makers can target policies to ensure efficiency and success in improving health and economic outcomes.

## Current Literature

Given the recognized importance of health care, it has received consistent attention from both public and private agencies. That attention gained additional relevance after the crucial role the health care system played throughout the COVID-19 pandemic.

Research delving into the historical health and economic disparities that face immigrant communities has focused on limited access to health insurance coverage and negative economic outcomes related to poverty, like food insecurity and housing instability (Chang, 2019). According to Derose et. al., immigrants "have lower rates of health insurance, use less health care, and receive lower quality of care than U.S.-born populations" (2007). "Foreign-born residents of America's suburbs experienced markedly higher poverty rates (14.1 percent) than the U.S. born (9.8 percent) in 2009," according to Suro et. al. (2011).

Because of the high rate of uninsurance and poverty in these communities, community health centers are exceedingly important, as they are the largest providers of uncompensated care in the safety net and  immigrants face the lowest barriers to care at these locations (Pourat et al, 2014). More recent studies, including a May 2022 study by the Guttmacher Institute, used the 2019 American Community Survey and the 2017−2018 National Health Interview Survey to conclude that there exist disparities by immigration status in access to health insurance, as well as primary and reproductive health care.

Because of these well-documented disparities, it is important for new research and analysis to provide a clearer picture of how these disparities currently materialize in communities to inform policy making.

In an exploration of health insurance coverage of U.S. immigrants, Dr. Ku analyzed the differences  between established immigrants versus recent immigrants (Ku, 2011). Recent immigrants were  categorized as immigrants who had been in the U.S. for less than a decade, while established immigrantswere categorized as immigrants who had been in the U.S. for over a decade. When comparing the health insurance status of these two groups, Ku found that only 44% of recent immigrants were fully covered by health insurance, where established immigrants were at 63%. These results reveal the impact time in America has on the insurance coverage of immigrants.

Chang, C. D. (2019). Social determinants of health and health disparities among immigrants and their children. *Current problems in pediatric and adolescent health care*, *49*(1), 23-30.

Derose, K. P., Escarce, J. J., & Lurie, N. (2007). Immigrants and health care: sources of vulnerability. *Health affairs*, *26*(5), 1258-1268.

Fuentes, L., Desai, S., and Dawson, R.. (2022). "New Analyses on US Immigrant Health Care Access Underscore the Need to Eliminate Discriminatory Policies." Www.guttmacher.org, May. https://doi.org/10.1363/2022.33551.

Ku, Leighton. (2011). Health Insurance Coverage and Medical Expenditures of Immigrants and Native-Born Citizens in the United States.*American Journal Of Public Health*, *99*(7), 1322-1328.

Pourat, N., Wallace, S. P., Hadler, M. W., & Ponce, N. (2014). Assessing health care services used by California's undocumented immigrant population in 2010. *Health Affairs*, *33*(5), 840-847

Schumacher, S., and Presiado, M. (2023). "Health and Health Care Experiences of Immigrants: The 2023 KFF/LA Times Survey of Immigrants." KFF. September 17, 2023. https://www.kff.org/racial-equity-and-health-policy/issue-brief/health-and-health-care-experiences-of-immigrants-the-2023-kff-la-times-survey-of-immigrants/.

Suro, R., Wilson, J. H., & Singer, A. (2011). Immigration and poverty in America's suburbs. *Metropolitan Opportunity Series*, 1-21.

## Library & Data Sources 

### Library

```{r, eval = FALSE}

library(ipumsr)
library(tidyverse)
library(tidymodels)
library(ggplot2)
library(corrplot)
library(VGAM)
library(rpart)
library(rpart.plot)
library(hardhat)
library(ranger)
library(recipes)
library(srvyr)
library(haven)
library(survey)
library(tidyclust)
library(GGally)
library(patchwork)
library(dotenv)
library(httr)
library(jsonlite)
library(tidycensus)
library(tigris)
library(lubridate)
library(patchwork)
library(stringr)
library(dplyr)
library(themis)
library(parsnip)
library(rsample)
library(yardstick)
library(vip)
library(kknn)
library(caret)
library(httr)
library(jsonlite) 
library(lubridate)
library(sf)
library(readr)
library(stringr)
library(janitor)
library(recipes)

set.seed(20231215)
```

### Current Population Survey - 2022

We are utilizing the Current Population Survey from 2022 as a major source of data for our analysis. This survey is conducted each year to capture statistical information on the population. The units of measurement are individual adults. The survey contains information on immigration demographic characteristics in addition to health insurance status. Below, we will utilize unsupervised machine learning techniques to analyze the relationship between health and demographic characteristics and estimate a model, given that the survey has many correlated predictors. We will also use the data in a supervised machine learning capacity to predict health coverage status based on several demographic predictors.

We used the IPUMS API to download the 2022 CPS data. We read in the data using the ipumsr package. To read in the data, an IPUMS API key is required and read in using the dotevn package.

```{r, eval = FALSE}

#using IPUMS API to access CPS ASEC 2022 data

dotenv::load_dot_env()

# Access the values
ipums_key <- Sys.getenv("ipums_api_key")

cps_extract_request <- define_extract_cps(
  description = "IPUMS-CPS, ASEC 2022",
  samples = c("cps2022_03s"),
  variables = c("CPSID", "ASECFLAG", "ASECWTH", "PERNUM", 
  "CPSIDV", "CPSIDP", "ASECWT", "AGE", 
  "SEX", "RACE", "MARST", "POPSTAT", "ASIAN", 
  "FAMSIZE", "NCHILD", "NCHLT5", "BPL", "YRIMMIG", 
  "CITIZEN", "MBPL", "FBPL", "NATIVITY", "HISPAN", 
  "EMPSTAT", "LABFORCE", "EDUC", "FTOTVAL", "INCTOT", 
  "INCWAGE", "OFFPOV", "MIGSTA1", "MIGRATE1", 
  "HIMCAIDNW", "HIMCARENW", "ANYCOVNW", "ANYCOVLY", "HHINCOME", "PRVTCOVNW", 
  "GRPCOVNW", "DPCOVNW", "MRKCOVNW", "TRCCOVNW", "INHCOVNW")
)

submitted_extract <- submit_extract(extract = cps_extract_request, api_key = Sys.getenv("ipums_api_key"))
downloadable_extract <- wait_for_extract(extract = submitted_extract, api_key = Sys.getenv("ipums_api_key"))
data_files <- download_extract(downloadable_extract, api_key = Sys.getenv("ipums_api_key"))

file_number <- submitted_extract[["number"]]

ddi_file <- paste0("cps_000", file_number, ".xml")

#Loading in the CPS 2022 data from IPUMS API
ddi <- read_ipums_ddi(ddi_file)
cps <- read_ipums_micro(ddi)

```

### American Communities Survey 2017-2022, County-Level Selected Demographics

```{r, echo = TRUE, warning = FALSE, message = FALSE, eval = FALSE}

# loading data 

variables <- tidycensus::load_variables(2022, "acs5")

acs_2022 <-
  get_acs(
  geography = "county",
  variables = c(
  "B01003_001", # = Total Population
  "DP02_0090PE", # = % born in the US
  "DP02_0093PE", # = % born in PR
  "DP02_0094PE", # = % foreign born
  "DP02_0100PE", # = % Native - Entered 2010 or later
  "DP02_0101PE", # = % Native - Entered before 2010
  "DP02_0103PE", # = % Foreign - Entered 2010 or later
  "DP02_0104PE", # = % Foreign - Entered before 2010
  "DP02_0106PE", # = % Foreign - Europe
  "DP02_0107PE", # = % Foreign - Asia
  "DP02_0108PE", # = % Foreign - Africa
  "DP02_0109PE", # = % Foreign - Oceania
  "DP02_0110PE", # = % Foreign - Latin America
  "DP02_0111PE", # = % Foreign - North America
  "DP05_0037PE", #= % white
  "DP05_0038PE", # = % black
  "DP05_0039PE", # = % american indian
  "DP05_0044PE", # = % Asian
  "DP05_0052PE", # = % Native american pacific islander
  "DP02_0065PE", # = % with a bachelors or above
  "DP03_0062E",  # = Median houshold income
  "DP02_0152PE", # = % that uses internet use
  "DP03_0004PE", # = % employed
  "DP03_0095PE" # = % with health care coverage
  ),
  geometry = TRUE,
  year = 2022, 
  survey = "acs5",
  progress = FALSE
) %>% 
  janitor::clean_names() %>% 
    mutate( 
      variable = case_when(
      variable == "B01003_001" ~ "total_pop",
      variable == "DP02_0090P" ~ "born_us",
      variable == "DP02_0093P" ~ "born_pr",
      variable == "DP02_0094P" ~ "born_abroad",
      variable == "DP02_0100P" ~ "native_after_2010",
      variable == "DP02_0101P" ~ "native_before_2010",
      variable == "DP02_0103P" ~ "foreign_after_2010",
      variable == "DP02_0104P" ~ "foreign_before_2010",
      variable == "DP02_0106P" ~ "nativity_europe",
      variable == "DP02_0107P" ~ "nativity_asia",
      variable == "DP02_0108P" ~ "nativity_africa",
      variable == "DP02_0109P" ~ "nativity_oceania",
      variable == "DP02_0110P" ~ "nativity_latin",
      variable == "DP02_0111P" ~ "nativity_north_amer",
      variable == "DP05_0037P" ~  "race_white",
      variable == "DP05_0038P" ~ "race_black",
      variable == "DP05_0039P" ~ "race_native_amer",
      variable == "DP05_0044P" ~ "race_asian",
      variable == "DP05_0052P" ~ "race_pacific",
      variable == "DP02_0065P" ~ "educ_bachelors",
      variable == "DP03_0062" ~ "median_income",
      variable == "DP02_0152P" ~ "internet_access",
      variable == "DP03_0004P" ~ "employed",
      variable == "DP03_0095P"~ "health_insurance"
              )) %>%
  select(- "moe") %>% 
  #unpivoting columns for each variable
 pivot_wider(names_from = "variable", values_from = "estimate")

```

### Health and Services Administration Community Health Centers

```{r, echo = TRUE, warning = FALSE, message = FALSE, eval = FALSE}

#importing from Health and Services Administration

hrsa_health_centers <- read_csv( paste0("https://data.hrsa.gov//DataDownload/DD_Files/","Health_Center_Service_Delivery_and_LookAlike_Sites.csv" )) %>% 
  janitor::clean_names() 
  
#look for missing values for geospacial join
  #longitudes
    #sum(is.na(hrsa_health_centers$geocoding_artifact_address_primary_x_coordinate))
    
    #x_cord_missing <- subset(hrsa_health_centers, is.na(geocoding_artifact_address_primary_x_coordinate)) %>% 
      #print(x_cord_missing)

  #latitudes
    #sum(is.na(hrsa_health_centers$geocoding_artifact_address_primary_y_coordinate))
    
    #y_cord_missing <- subset(hrsa_health_centers, is.na(geocoding_artifact_address_primary_y_coordinate))

#there are 25 values missing out of 17192. It isn't isolated to only one state and other data is missing. Will remove those rows
    
hrsa_health_centers <- 
  subset(hrsa_health_centers, !is.na(geocoding_artifact_address_primary_y_coordinate)) #y and x coordinates are missing from same observations, so can just eliminate based on one condition

```

### US Census County Shapefiles

```{r, echo = TRUE, warning = FALSE, message = FALSE, eval = FALSE}

# URL to the shapefile zip file
county_url <- "https://www2.census.gov/geo/tiger/TIGER2022/COUNTY/tl_2022_us_county.zip"

# Specify the destination folder where you want to save the downloaded file
destination_folder <- "COUNTY/tl_2022_us_county.zip"

# Download the shapefile zip file
download.file(county_url, destfile = file.path(destination_folder, "tl_2022_us_county.zip"), mode = "wb")

# Unzip the downloaded file
unzip(file.path(destination_folder, "tl_2022_us_county.zip"), exdir = destination_folder)

# Read the shapefile into R
shapefile <- sf::st_read(file.path(destination_folder, "tl_2022_us_county.shp")) %>% 
  janitor::clean_names()%>% 
  select(geometry,geoid) 

```

\
\## 3. Data Wrangling and Exploratory Analysis 3. Data Wrangling and Exploratory Data Analysis: This section should include your code\
to perform any data cleaning and new variable creation. You should also thoroughly\
explore your data, including assessing the presence of outliers/unexpected values and\
identifying and appropriately addressing missingness in any key variables.

#### CPS Data Wrangling and Exploratory Analysis

```{r, eval = FALSE}

cps <- cps %>%
  janitor::clean_names() %>%
  select(-year, -month, -mbpl, -fbpl, -asian, -asecflag)

cps_na <- is.na(cps)

missing_counts <- colSums(cps_na)

print(missing_counts[missing_counts > 0])

# there are no NA values, however the CPS missing values are coded as numbers so we address those below

# create a boxplot to visualize any outliers
boxplot <- boxplot(cps)

boxplot

# there is an outlier in the cpsidv variable, we will ensure that the identifier variable is not used in any analysis and drop it from the dataset

cps <- cps %>%
  select(-cpsidv)
  

# create variable for health insurance status 

cps <- cps %>%
  mutate(healthinsu = case_when(
    himcaidnw == 1 ~ "medicaid", 
    himcarenw == 1 ~ "medicare",
    prvtcovnw == 1 ~ "private",
    grpcovnw == 1 ~ "employment based",
    dpcovnw == 1 ~ "direct purchase",
    mrkcovnw == 1 ~ "marketplace",
    trccovnw == 1 ~ "tricare", 
    inhcovnw == 1 ~ "indian health service",
    TRUE ~ NA_character_  
  )) 

# ensuring each category is labeled

cps <- cps %>%
  mutate(healthinsu = factor(healthinsu, levels = c(
    "medicaid", "medicare", "private", "employment based", 
    "direct purchase", "marketplace", "tricare", 
    "indian health service"
  ), labels = c(
    "Medicaid", "Medicare", "Private", "Employment Based", 
    "Direct Purchase", "Marketplace", "Tricare", 
    "Indian Health Service"
  )))

# removing original dummy variables for health insurance status

cps <- cps %>%
  filter(!is.na(anycovnw)) %>%
  select(-himcaidnw, -himcarenw, -prvtcovnw, -grpcovnw, -dpcovnw, -mrkcovnw, -trccovnw, -inhcovnw) %>%
  mutate(healthinsu = as_factor(healthinsu))

# ensuring all variables are numeric

cps <- cps %>%
  mutate_all(as.numeric)


#Remove NAs coded as numbers


cps <- subset(cps, anycovly != 99)
cps <- subset(cps, empstat != 00)
cps <- subset(cps, hhincome != 99999999)
cps <- subset(cps, sex != 9)
cps <- subset(cps, race != 999)
cps <- subset(cps, marst != 9)
cps <- subset(cps, bpl != 99999)
cps <- subset(cps, citizen != 9)
cps <- subset(cps, hispan != 902)
cps <- subset(cps, labforce != 0)
cps <- subset(cps, educ != 001)
cps <- subset(cps, educ != 999)
cps <- subset(cps, ftotval != 9999999999)
cps <- subset(cps, inctot != 9999999999)
cps <- subset(cps, inctot != 9999999998)
cps <- subset(cps, incwage != 9999999999)
cps <- subset(cps, incwage != 9999999998)
cps <- subset(cps, offpov != 99)
cps <- subset(cps, migsta1 != 00)
cps <- subset(cps, migrate1 != 0)

cps <- cps %>%
  select(-popstat)

```

#### ACS, HSA, and Census Data Wrangling

Alicia to write description

```{r, echo = TRUE, warning = FALSE, message = FALSE, eval = FALSE}

### SPACIALLY JOIN CENSUS COUNTIES AND HSA DATASET: Aggregate number of health centers by county

  #convert hrsa lat/long points to geometry
  hrsa_health_centers_geo <- 
    hrsa_health_centers %>% 
    st_as_sf(coords = c("geocoding_artifact_address_primary_x_coordinate", "geocoding_artifact_address_primary_y_coordinate"), remove = FALSE, crs = 4269)
    
  # new data with geoid
  hrsa_joined  <- 
  st_join(hrsa_health_centers_geo, shapefile, join = st_within)
  
  # Create column that sums the total number of health centers
  hrsa_grouped <-  
  hrsa_joined %>%
    group_by(geoid) %>%
    summarize(
      total_centers = n())
  
      #verify that sum of centers = number of rows in hrsa dataset
      hrsa_grouped %>% 
        summarize(sum(total_centers)) %>% 
        print()


### FINALIZE SF DATA SET: JOIN ACS TO SPACIAL HSA DATA

#verify that acs data is the same CRS as the joined_data
st_crs(acs_2022)

#table(acs_2022$geoid)

acs_joined  <- 
  st_join(acs_2022, hrsa_grouped, left = TRUE) %>% 
  #replace null values with 0
  mutate(total_centers = ifelse(is.na(total_centers), 0, total_centers))

#Total centers in joined data set very closely matches that of the hrsa dataset, implies that left join is justified 
acs_joined %>% 
  summarize(sum(total_centers)) %>% 
  print()

### CREATE FINALIZED NON-SF DATASET: Will use for normal ggplots, and analysis between acs immigrant demographics and health center data

acs_joined_nonspac   <- st_drop_geometry(acs_joined) 

  #creating a variable to indicate where, if there is an immigrant population, what nativity accounts for the highest proportion of immigrants
  
  nativity_col <- acs_joined %>% 
    select(geoid.x,nativity_europe,nativity_asia,nativity_africa,nativity_oceania,nativity_latin,nativity_north_amer) %>% 
    pivot_longer(
            cols = c(nativity_europe,nativity_asia,nativity_africa,nativity_oceania,nativity_latin,nativity_north_amer),
            
            names_to = "top_nativity",
            
            values_to = "percent"
            ) %>% 
    group_by(geoid.x) %>% 
    slice(which.max(percent))

  #add "top_nativity" column to the final, non-spacial dataset
  acs_joined_nonspac  <- 
    left_join(acs_joined_nonspac,nativity_col,by = "geoid.x")

  #remove null values that were caused due to a 0% immigrant population
  acs_joined_nonspac <- acs_joined_nonspac %>% 
     mutate(top_nativity = ifelse(is.na(top_nativity),"no_immigrant", top_nativity)) 

```

## Data Analysis

4.  Data Analysis: This section should include the code to conduct analysis to answer your\
    question of interest. It should include writing explaining why the tools you selected are\
    a good fit for the research question and a justification of key analytic decisions. If you\
    are using machine learning methods, this section should include model evaluation using\
    the methods discussed in class.

### General Trends within Immigrant Populations

Ed to write about exploratory analysis/data viz

### Geographic Distribution of Immigrant Communities

```{r, eval = FALSE}

#counties with the highest proportion of immigrants
acs_joined %>% 
  select(name,born_abroad,total_centers) %>% 
  top_n(5, wt = born_abroad) %>% 
  print() %>%
  knitr::kable(digits = 2)


#density plot of number of counties at each level of immigrant population
immig_geo_density <- 
acs_joined %>% 
  select(born_abroad,geoid.x) %>% 
  group_by(born_abroad) %>% 
    count()

ggplot(data = immig_geo_density, aes(x = born_abroad))+
  geom_density(alpha = .3) +
  labs(title = "Density of Immigrant Counties by Percent of Population Born Abroad",
       x = "Percent Born Abroad",
       y = "Number of Counties") +
  theme(
    axis.title.x = element_text(size = 14, color = "blue"))

#US Map
  #crop map to include only the continental US
  us_cropped <- st_crop(acs_joined, xmin = -125, xmax = -50, ymin = 50, ymax = 20)
  
  #map of us counties
  ggplot() + 
    geom_sf(data = us_cropped, aes(fill = born_abroad), alpha = 1) +
    scale_fill_gradient(low = "white",high ="purple") +
    theme_void()
  
```

### Exploring Health Disparities

#### Part A) Unsupervised Machine Learning using data from the CPS

```{r, eval = FALSE}

# correlation plot of data to highlight multicollinearity 

correlation <- cps %>%
  select(-serial, -cpsid, -asecwth, -pernum, -cpsidp, -cpsidv, -asecwt) %>%
  cor()

corrplot(correlation, method = 'color')

# creating PCA recipe 
rec_pca <- recipe(
  formula = ~ .,
  data = cps) %>%
  update_role(serial, cpsid, asecwth, pernum, cpsidp, cpsidv, asecwt, new_role = "Id") %>%
  step_scale(all_predictors()) %>%
  step_pca(all_predictors(), num_comp = 5) %>%
  prep(data = cps) 

# apply estimated loadings to original data
cps_pcs <- rec_pca %>%
  bake(new_data = cps)

# Extract Loadings
coef <- rec_pca %>%
  tidy(type = "coef", number = 2)

# Extract variance explained
variance <- rec_pca %>%
  tidy(type = "variance", number = 2) %>%
  filter(terms == "variance") %>%
  mutate(pct_var = value/sum(value)) %>%
  slice_head(n = 10) 

print(variance)

coefprint <- coef %>%
  filter(component %in% c("PC1", "PC2", "PC3", "PC4")) %>%
  group_by(component) %>%
  top_n(n = 3, wt = value)

print(coefprint)

# The first 4 clusters explain over 90 % of the variation, so I will also examine the data using a K-means alogrithm using 4 clusters.

cps_pcs_all <- 
  bind_cols(cps, cps_pcs)

# making scatterplot to visualize data

plot1 <- cps_pcs_all %>%
  ggplot(mapping = aes(x = PC1, y = PC2, color = citizen)) +
  geom_point() + 
  labs(title = "Scatterplot of PC1 and PC2 by Citizenship",
       x = "Principal Component 1",
       y = "Principal Component 2") + 
  theme(plot.title = element_text(size = 12))

plot2 <- cps_pcs_all %>%
  ggplot(mapping = aes(x = PC1, y = PC2, color = healthinsu)) +
  geom_point() + 
  labs(title = "Scatterplot of PC1 and PC2 by Health Insurance Status",
       x = "Principal Component 1",
       y = "Principal Component 2") + 
  theme(plot.title = element_text(size = 12))

plot3 <- cps_pcs_all %>%
  ggplot(mapping = aes(x = PC3, y = PC4, color = citizen)) +
  geom_point() + 
  labs(title = "Scatterplot of PC3 and PC4 by Citizenship",
       x = "Principal Component 3",
       y = "Principal Component 4") + 
  theme(plot.title = element_text(size = 12))

plot4 <- cps_pcs_all %>%
  ggplot(mapping = aes(x = PC3, y = PC4, color = healthinsu)) +
  geom_point() + 
  labs(title = "Scatterplot of PC3 and PC4 by Health Insurance Status",
       x = "Principal Component 3",
       y = "Principal Component 4") + 
  theme(plot.title = element_text(size = 12))

plot1 + plot2 + plot3 + plot4

# Creating a kmeans model with 4 clusters

kmeans_rec <- recipe(
formula = ~ .,
data = cps
) %>%
  update_role(serial, cpsid, asecwth, pernum, cpsidp, cpsidv, asecwt, new_role = "Id") %>%
  step_dummy(all_nominal(), -all_outcomes()) %>% 
  step_scale(all_predictors()) %>%
  step_center(all_predictors()) 

kmeans_numeric <- kmeans_rec %>%
prep() %>%
bake(new_data = cps)


# create a kmeans model object four clusters
kmeans_spec <- k_means(
num_clusters = 4 
) %>%
set_engine(
"stats",
nstart = 100, iter.max = 1000
)

# create a workflow
kmeans_wflow <- workflow(
preprocessor = kmeans_rec,
spec = kmeans_spec
)

# fit the model
fit <- kmeans_wflow %>%
fit(data = cps)

# view the model results
tidy(fit) %>%
knitr::kable(digits = 2)
```

In an attempt to broadly understand our CPS dataset, we conducted unsupervised machine learning to summarize variable without a set outcome variable.

First, we visualized correlation among the variables in our dataset. According to the correlation plot, many of the variables are correlated. This highlights the presence of multicollinearity, which led us to perform a Principal Component Analysis on the dataset, which I explain further below. It also shows how variables related to health, income, and immigration are all closely related, further informing our analysis.

Second, we performed a Principal Component Analysis (PCA). This process transforms many
linearly correlated variables, as was demonstrated in the correlation plot, into a set of linearly uncorrelated variables called principal components. PCA successfully reduced the dimensionality of the dataset, capturing the essential information in the first four principal components, which collectively account for over 90% of the variance.

To delve deeper into the interpretation of these components, we examined the top three contributing variables for each component, as presented in Table XX. This excluded several values for ease of explanation. This focused analysis allows us to highlight key factors driving the variance in the data. Notably, the number of children under 5 is the most influential variable in Component 1, while the year of immigration takes precedence in both Components 2 and 3. Component 4 is primarily driven by age. These findings emphasize the significance of specific variables in shaping the overall structure of the data, shedding light on potential patterns and relationships which we dive deeper into using supervised machine learning below. The plots included visualize the components across two variables of interest in our analysis: health insurance coverage type and citizenship status.

#### Part B: Predicting Immigrant Likelihood for Health Coverage: Supervised Machine Learning using data from the CPS

Based on prior research, it is apparent that immigrants often struggle to make a living to support themselves and their families in America. However, as an immigrants time in America increases, some of these economic factors improve. Through a supervised machine learning model, we predict household income of immigrants based on their year of immigration. We decided to use year of immigration as its importance was uncovered via our unsupervised machine learning analysis. The variable "hhincome" is predicted in the model below.

```{r, eval = FALSE}

# Visualize how years in the U.S. impacts income

cps_hhincome_viz <- cps %>%
  filter(yrimmig > 1980) %>%
  group_by(yrimmig, hhincome) %>%
  summarise(frequency = n()) %>%
  ggplot(aes(x = yrimmig, y = hhincome, size = frequency)) + scale_x_continuous(breaks = seq(1980, 2025, by = 5)) + geom_point() + theme_minimal() + labs(

    title = "Years Since Immigration's Impact on Household Income ",

    x = "Years Since Immigration",

    y = "Household Income",

    caption = "Data from the Community Population Survey")


print(cps_hhincome_viz)
```

The plot above shows no specific trend, revealing that increased time in the U.S. does not necessarily lead to increased income for immigrants.

```{r, eval = FALSE}
#Split data into training and testing data with the variable of interest set as household income ("hhincome")

split <- initial_split(data = cps, strata = "hhincome", prop = 0.8)


cps_train <- training(x = split)
cps_test <- testing(x = split)

```

```{r, eval = FALSE}
# Create a recipe for the model. Here the predictor is year since immigration (yrimmig) to predict income.

cps_rec <- 
  recipe(hhincome ~ ., data = cps_train) %>%
  update_role(serial, cpsid, asecwth, pernum, cpsidp, cpsidv, asecwt, new_role = "Id") %>%
  step_dummy(all_nominal_predictors()) %>% 
  step_zv(all_numeric_predictors()) %>%
  step_center(all_numeric_predictors()) %>%
  step_zv(all_predictors()) %>%
  step_log(hhincome, base = 10) # flagging we may have get rid of any income variables below zero, as taking the log of a neg number isn't a real number
  

bake(prep(cps_rec, training = cps_train), new_data = cps_train)
     
```

```{r, eval = FALSE}
# Set up v-fold cross validation with 10 folds to test the model.

folds <- vfold_cv(data = cps_train, v = 10)
folds
```

```{r, eval = FALSE}
# Linear Regression Model to predict health insurance coverage based on immigration year.

lm_mod <- linear_reg() %>%
  set_engine("lm")


# create a workflow
lm_wf <- workflow() %>%
  add_recipe(cps_rec) %>%
  add_model(lm_mod) 

# fit the model by piping your workflow
lm_cv <- lm_wf %>%
  fit_resamples(resamples = folds)


# select the best model based on the "rmse" metric
lm_best <- lm_cv %>%
  select_best(metric = "rmse")


# use the finalize_workflow() function with your workflow and the best model 
# to update (or "finalize") your workflow by modifying the line below
lm_final <- finalize_workflow(
  lm_wf,
  parameters = lm_best
)



lm_coefs <- lm_final %>%
  fit(data = cps_train) %>%
  extract_fit_parsnip() %>%
  vi(lambda = lasso_best$penalty)
```

```{r, eval = FALSE}
#finalize workflow
lm_final_wf <- 
  lm_wf %>% 
  finalize_workflow(lm_best)

#final fit 
lm_final_fit <- 
  lm_final_wf %>%
  last_fit(split)

# RSME or Out of sample error rate
lm_final_fit %>%
  collect_metrics(lm_final, summarize = FALSE) %>% 
  print()

#collect predictions & show testing data predictions
predictions <- 
  lm_final_fit %>% 
  collect_predictions()

```

Allie to write analysis of supervised machine learning model

#### Part 3: Understanding Immigrant Access to Health Centers

##### Descriptive Statistics for Health Centers

```{r, eval = FALSE}

#Average number of federally qualified health centers in the US in each county
acs_joined %>% 
  summarize(mean(total_centers)) %>% 
  print()

#Median number of federally qualified health centers in the US in each counties
acs_joined %>% 
  summarise(median(total_centers)) %>% 
  print()

#counties with the most community health centers
acs_joined %>% 
  select(name,total_centers) %>% 
  top_n(5, wt = total_centers) %>% 
  print

#counties with the least community health centers
acs_joined %>% 
  select(name,total_centers,born_abroad) %>% 
  arrange(desc(total_centers)) %>% 
  tail(5) %>% 
  print()

```

***Scatter Plot of Relationships Between Immigrant Population and Health Center Access***

```{r, eval = FALSE}

# log variables for data visualization purposes

acs_joined_nonspac_log <- 
acs_joined_nonspac %>% 
  mutate(centers_per_capita = log((total_centers+1)/total_pop), #adding 1 as a constant to ensure there are no undefined values for areas with no centers
         log_born_abroad = log(born_abroad + 1)) #adding 1 as a constant to ensure there are no undefined values for areas with significant immigrant populations

#create a scatter plot of all immigrants
acs_joined_nonspac_log %>% 
  ggplot(aes(x = log_born_abroad, y = centers_per_capita)) +
  geom_point(alpha = 0.25) +
  geom_smooth(method = "lm", se = TRUE) +
  labs(title = "Health Center Access Decreases as the Proportion of Immigrant Population Increases")+
  theme_minimal() 


#create scatter plot comparing european heavy immigrants with latino
acs_joined_nonspac_log %>% 
  filter(top_nativity == "nativity_latin" | top_nativity == "nativity_asia" | top_nativity == "nativity_africa") %>% 
  ggplot(aes(x = log_born_abroad, y = centers_per_capita, fill = top_nativity, color = top_nativity)) +
  geom_point(alpha = 0.25) +
  geom_smooth(method = "lm", se = TRUE) +
  labs(title = "Health Center Access Decreases as the Proportion of Immigrant Population Increases")+
  theme_minimal() 

```

\
5. Discussion of Results: This section should include the interpretation of your results.\
Please discuss what your results suggest about the answer to your research question\
of interest. Please also discuss any limitations of your analysis and areas for potential\
future research.

Alicia paragraph of key takeaways from analysis

Olivia paragraph of key takeaways from analysis

Paragraph of limitations and areas for potential research (changes over time) Limitations:

While the data used in our analysis paints an accurate picture of immigrants in America as of 2022, by limiting our data to just one year, we are not able to see change overtime or any prior year data. It is likely that during large economic downturns, such as the 2007 financial crisis or COVID-19, immigrants in America experiences even worse conditions that they do now.

In our analysis we removed all NAs as a way to simplify the data and enable analysis. However, it is likely that many of the NAs in the dataset were not random. Many immigrants may be weary of sharing their income levels or health care status with a surveyor. By leaving out these observations, we are likely biasing our data and drawing inaccurate conclusions about the immigrant population.

-Lack of survey weights means can't extrapolate

-could do analysis overtime

-removing NAs - ethical implications

Paragraph of policy recommendations
